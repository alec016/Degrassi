plugins {
    id "architectury-plugin" version "3.4.146"
    id "dev.architectury.loom" version "1.3+" apply false
    id "maven-publish"
    id "me.shedaniel.unified-publishing" version "0.1.+" apply false
}

architectury {
    minecraft = project.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = project.archives_base_name
    version = project.mod_version
    group = project.maven_group

    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
        maven {
            // location of the maven that hosts JEI files since January 2023
            name = "Jared's maven"
            url = "https://maven.blamejared.com/"
        }
        maven {
            name = "Curse maven"
            url = "https://www.cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven {
            name = "ModMaven"
            url = "https://modmaven.dev"
        }
        //Needed for KubeJS
        maven {
            name = "Jitpack Maven"
            url = "https://jitpack.io"
        }
        maven {
            name = "Architectury"
            // Shedaniel's maven (Architectury API)
            url = "https://maven.architectury.dev"
            content {
                includeGroup "dev.architectury"
            }
        }
        maven {
            // saps.dev Maven (KubeJS and Rhino)
            name = "Latvian maven"
            url = "https://maven.saps.dev/releases"
            content {
                includeGroup "dev.latvian.mods"
                includeGroup "dev.ftb.mods"
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        sourceCompatibility = targetCompatibility = '17'
        withSourcesJar()
    }


    if(project.path != ':common' && project.path != ':') {
        publishing {
            publications {
                maven(MavenPublication) {
                    groupId = project.group
                    artifactId = project.archivesBaseName
                    version = project.version
                    from components.java

                    pom {
                        name = project.mod_name
                        description = project.mod_description
                        packaging = 'jar'
                        version = project.version
                        scm {
                            url = project.github
                        }
                        issueManagement {
                            system = 'github'
                            url = project.issues
                        }
                        licenses {
                            license {
                                name = project.license
                                distribution = 'repo'
                            }
                        }
                        developers {
                            developer {
                                id = project.author
                                name = project.author
                                roles = ['developper']
                            }
                        }
                    }
                }
            }
            repositories {
            }
        }
    }
}